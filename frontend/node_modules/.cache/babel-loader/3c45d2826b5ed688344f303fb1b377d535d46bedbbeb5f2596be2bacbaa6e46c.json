{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexander\\\\Kodingan\\\\POS-React\\\\frontend\\\\src\\\\components\\\\Pagination.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalRecords: \"\",\n      pageLimit: \"\",\n      totalPages: \"\",\n      currentPage: \"\",\n      initialPage: \"\",\n      pagesToShow: \"\"\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      totalRecords: this.props.totalRecords,\n      pageLimit: this.props.pageLimit || 10,\n      totalPages: Math.ceil(this.props.totalRecords / this.props.pageLimit),\n      pagesToShow: this.props.pagesToShow || 5,\n      currentPage: this.props.initialPage || 1\n    });\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      totalRecords: nextProps.totalRecords,\n      pageLimit: nextProps.pageLimit || 10,\n      totalPages: Math.ceil(nextProps.totalRecords / nextProps.pageLimit),\n      pagesToShow: nextProps.pagesToShow || 5\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.totalRecords !== prevState.totalRecords || this.state.pageLimit !== prevState.pageLimit) {\n      this.setPage(this.state.currentPage);\n    }\n  }\n  setPage(page) {\n    var {\n      totalRecords,\n      pageLimit,\n      totalPages\n    } = this.state;\n    if (page < 1) {\n      page = 1;\n    } else if (page > totalPages) {\n      page = totalPages;\n    }\n    this.setState({\n      currentPage: page\n    });\n    var startIndex = (page - 1) * pageLimit;\n    var endIndex = Math.min(startIndex + pageLimit - 1, totalRecords - 1);\n    this.props.onChangePage({\n      pageLimit,\n      totalPages,\n      page,\n      startIndex,\n      endIndex\n    });\n  }\n  getPager() {\n    var {\n      pagesToShow,\n      currentPage,\n      totalPages\n    } = this.state;\n    var pages = [],\n      startFromNumber;\n    if (totalPages <= pagesToShow) {\n      startFromNumber = 1;\n      pagesToShow = totalPages;\n    } else {\n      if (currentPage <= Math.ceil(pagesToShow / 2)) {\n        startFromNumber = 1;\n      } else if (currentPage + Math.floor((pagesToShow - 1) / 2) >= totalPages) {\n        startFromNumber = totalPages - (pagesToShow - 1);\n      } else {\n        startFromNumber = currentPage - Math.floor(pagesToShow / 2);\n      }\n    }\n    for (let i = 1; i <= pagesToShow; i++) {\n      pages.push(startFromNumber++);\n    }\n    return {\n      currentPage,\n      totalPages,\n      pages\n    };\n  }\n  render() {\n    // console.log(this.state);\n    if (!this.state.totalRecords || this.state.totalPages === 1) return null;\n    var pager = this.getPager();\n    // console.log(pager);\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: pager.currentPage === 1 ? true : false,\n          onClick: () => this.setPage(1),\n          children: \"First\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: pager.currentPage === 1 ? true : false,\n          onClick: () => this.setPage(pager.currentPage - 1),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), pager.pages.map((page, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: pager.currentPage === page ? \"active\" : \"\",\n          onClick: () => this.setPage(page),\n          children: page\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: pager.currentPage === pager.totalPages ? true : false,\n          onClick: () => this.setPage(pager.currentPage + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: pager.currentPage === pager.totalPages ? true : false,\n          onClick: () => this.setPage(pager.totalPages),\n          children: \"Last\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n}\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  initialPage: PropTypes.number,\n  pagesToShow: PropTypes.number\n};\nexport default Pagination;","map":{"version":3,"names":["React","Component","PropTypes","jsxDEV","_jsxDEV","Pagination","constructor","props","state","totalRecords","pageLimit","totalPages","currentPage","initialPage","pagesToShow","componentDidMount","setState","Math","ceil","componentWillReceiveProps","nextProps","componentDidUpdate","prevProps","prevState","setPage","page","startIndex","endIndex","min","onChangePage","getPager","pages","startFromNumber","floor","i","push","render","pager","className","children","disabled","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","propTypes","number","isRequired"],"sources":["C:/Users/Alexander/Kodingan/POS-React/frontend/src/components/Pagination.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Pagination extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      totalRecords: \"\",\r\n      pageLimit: \"\",\r\n      totalPages: \"\",\r\n      currentPage: \"\",\r\n      initialPage: \"\",\r\n      pagesToShow: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      totalRecords: this.props.totalRecords,\r\n      pageLimit: this.props.pageLimit || 10,\r\n      totalPages: Math.ceil(this.props.totalRecords / this.props.pageLimit),\r\n      pagesToShow: this.props.pagesToShow || 5,\r\n      currentPage: this.props.initialPage || 1,\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      totalRecords: nextProps.totalRecords,\r\n      pageLimit: nextProps.pageLimit || 10,\r\n      totalPages: Math.ceil(nextProps.totalRecords / nextProps.pageLimit),\r\n      pagesToShow: nextProps.pagesToShow || 5,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      this.state.totalRecords !== prevState.totalRecords ||\r\n      this.state.pageLimit !== prevState.pageLimit\r\n    ) {\r\n      this.setPage(this.state.currentPage);\r\n    }\r\n  }\r\n\r\n  setPage(page) {\r\n    var { totalRecords, pageLimit, totalPages } = this.state;\r\n\r\n    if (page < 1) {\r\n      page = 1;\r\n    } else if (page > totalPages) {\r\n      page = totalPages;\r\n    }\r\n\r\n    this.setState({\r\n      currentPage: page,\r\n    });\r\n\r\n    var startIndex = (page - 1) * pageLimit;\r\n    var endIndex = Math.min(startIndex + pageLimit - 1, totalRecords - 1);\r\n\r\n    this.props.onChangePage({\r\n      pageLimit,\r\n      totalPages,\r\n      page,\r\n      startIndex,\r\n      endIndex,\r\n    });\r\n  }\r\n\r\n  getPager() {\r\n    var { pagesToShow, currentPage, totalPages } = this.state;\r\n    var pages = [],\r\n      startFromNumber;\r\n\r\n    if (totalPages <= pagesToShow) {\r\n      startFromNumber = 1;\r\n      pagesToShow = totalPages;\r\n    } else {\r\n      if (currentPage <= Math.ceil(pagesToShow / 2)) {\r\n        startFromNumber = 1;\r\n      } else if (\r\n        currentPage + Math.floor((pagesToShow - 1) / 2) >=\r\n        totalPages\r\n      ) {\r\n        startFromNumber = totalPages - (pagesToShow - 1);\r\n      } else {\r\n        startFromNumber = currentPage - Math.floor(pagesToShow / 2);\r\n      }\r\n    }\r\n\r\n    for (let i = 1; i <= pagesToShow; i++) {\r\n      pages.push(startFromNumber++);\r\n    }\r\n\r\n    return {\r\n      currentPage,\r\n      totalPages,\r\n      pages,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n    if (!this.state.totalRecords || this.state.totalPages === 1) return null;\r\n\r\n    var pager = this.getPager();\r\n    // console.log(pager);\r\n\r\n    return (\r\n      <ul className=\"pagination\">\r\n        <li>\r\n          <button\r\n            disabled={pager.currentPage === 1 ? true : false}\r\n            onClick={() => this.setPage(1)}\r\n          >\r\n            First\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <button\r\n            disabled={pager.currentPage === 1 ? true : false}\r\n            onClick={() => this.setPage(pager.currentPage - 1)}\r\n          >\r\n            Back\r\n          </button>\r\n        </li>\r\n        {pager.pages.map((page, index) => (\r\n          <li key={index}>\r\n            <button\r\n              className={pager.currentPage === page ? \"active\" : \"\"}\r\n              onClick={() => this.setPage(page)}\r\n            >\r\n              {page}\r\n            </button>\r\n          </li>\r\n        ))}\r\n        <li>\r\n          <button\r\n            disabled={pager.currentPage === pager.totalPages ? true : false}\r\n            onClick={() => this.setPage(pager.currentPage + 1)}\r\n          >\r\n            Next\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <button\r\n            disabled={pager.currentPage === pager.totalPages ? true : false}\r\n            onClick={() => this.setPage(pager.totalPages)}\r\n          >\r\n            Last\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  totalRecords: PropTypes.number.isRequired,\r\n  pageLimit: PropTypes.number,\r\n  initialPage: PropTypes.number,\r\n  pagesToShow: PropTypes.number,\r\n};\r\n\r\nexport default Pagination;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}